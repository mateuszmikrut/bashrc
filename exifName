#!/bin/bash

function checkDepends(){
	if ! which mplayer > /dev/null || ! which identify > /dev/null ;then
		echo "No dependencies installed on system. PLS install Mplayer and ImageMagick"
		exit 2
	fi
}

function getDateFromIMG(){
	local fulldate=`identify -verbose $1 | grep DateTimeOriginal`
	data=`echo $fulldate | awk '{print $2}' | tr ':' '-'` 
	godzina=`echo $fulldate | awk '{print $3}' | tr ':' '.'`
	roz=`echo ${1##*.} | tr A-Z a-z`
}

function getDateFromMOV(){
	local fulldate=`mplayer -really-quiet -identify -frames 0 -vo null -nosound -nolirc $1 | grep ID_CLIP_INFO_VALUE3 | cut -d '=' -f 2`
	data=`echo $fulldate | awk '{print $1}'` 
	godzina=`echo $fulldate | awk '{print $2}' | tr ':' '.'`
	roz=`echo ${1##*.} | tr A-Z a-z`
}

function changeName(){
	# Ignoruj spacje w argumencie	
	SAVEIFS=$IFS
	IFS=$(echo -en "\n\b")	

	#Sprawdź czy plik jest obrazem
	if file $1 | grep image > /dev/null ; then
		getDateFromIMG $1
	elif file $1 | grep -i media > /dev/null ; then
		getDateFromMOV $1
	else
		echo "Probably specyfied file ($1) is not image or video clip"
		return 2
	fi

	if [[ ! $data ]] || [[ ! $godzina ]] || [[ ! $roz ]]; then
		echo "Probably specified file ($1) has no EXIF data available. Exiting ..."
		return 2
	else
		if [ $save == 0 ]; then
			mv --backup=t -v $1 $data\ $godzina.$roz
		else
			cp --backup=t -vp $1 $data\ $godzina.$roz
		fi
	fi
	# Przywróć stary IFS
	IFS=$SAVEIFS
}

function help(){
	echo -e "Usage:\n\tnameIT IMG1.jpg IMG2.jpg\n\tnameIT --cp IMG1.jpg IMG2.jpg\nHint:\n\tnameIT *.[Jj][pP][gG]"
}

function main(){
	checkDepends
	# Połącz argumenty z \ w całość
	for args in "$@"
	do
		if [[  $args == "--save" ]] || [[ $args == "--cp" ]] ;then
			continue
		else
			changeName "$args" 
		fi
	done
}

case $1 in
	--help|-h)
		help
	;;
	"")
		help
	;;
	--save|--cp)
		save=1
		main "$@"
	;;
	*)
		save=0
		main "$@"
	;;
esac

